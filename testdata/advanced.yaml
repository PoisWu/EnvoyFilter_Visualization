admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 127.0.0.1, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 127.0.0.1, port_value: 10000 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route_1
            virtual_hosts:
            - name: local_service_1
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: some_service_1 }
          http_filters:
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz"
              httpService:
                authorizationRequest:
                  {}
                authorizationResponse:
                  {}
                pathPrefix: /auth
                serverUri:
                  cluster: some_service_1
                  timeout: 1s
                  uri: 127.0.0.1:49999
          - name: envoy.filters.http.router
  - name: listener_1
    address:
      socket_address: { address: 127.0.0.1, port_value: 10001 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          tracing: {}
          codec_type: AUTO
          route_config:
            name: local_route_2
            virtual_hosts:
            - name: local_service_2
              domains: ["*"]
              routes:
              - match: { prefix: "/api" }
                route: { cluster: some_service_1 }
              - match: { prefix: "/other" }
                route: { cluster: some_service_2 }
          http_filters:
          - name: envoy.filters.http.router
  clusters:
  - name: some_service_1
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: some_service_1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 1234
  - name: some_service_2
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: some_service_2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 1235
statsSinks:
- name: envoy.stat_sinks.dog_statsd
  typed_config:
    "@type": type.googleapis.com/envoy.config.metrics.v3.DogStatsdSink
    address:
      socketAddress:
        address: 127.0.0.1
        port_value: 4444
    prefix: envoy
tracing:
  http:
    name: envoy.tracers.datadog
    typed_config:
      "@type": type.googleapis.com/envoy.config.trace.v3.DatadogConfig
      collectorCluster: datadog_agent
      serviceName: envoy